(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{797:function(t,e,a){"use strict";a.r(e);var r=a(112),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"abp-graphql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abp-graphql"}},[t._v("#")]),t._v(" Abp.GraphQL")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://abp.io",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/badge/dynamic/xml?style=flat-square&color=yellow&label=abp&query=%2F%2FProject%2FPropertyGroup%2FAbpVersion&url=https%3A%2F%2Fraw.githubusercontent.com%2FEasyAbp%2FAbp.GraphQL%2Fmaster%2FDirectory.Build.props",alt:"ABP version"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.nuget.org/packages/EasyAbp.Abp.GraphQL.Provider.Shared",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/nuget/v/EasyAbp.Abp.GraphQL.Provider.Shared.svg?style=flat-square",alt:"NuGet"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.nuget.org/packages/EasyAbp.Abp.GraphQL.Provider.Shared",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/nuget/dt/EasyAbp.Abp.GraphQL.Provider.Shared.svg?style=flat-square",alt:"NuGet Download"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://discord.gg/S6QaezrCRq",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://badgen.net/discord/online-members/S6QaezrCRq?label=Discord",alt:"Discord online"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.github.com/EasyAbp/Abp.GraphQL",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/github/stars/EasyAbp/Abp.GraphQL?style=social",alt:"GitHub stars"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("An ABP module that allows using application services by GraphQL. It also accepted custom schemes and types you defined.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/modules/Abp.GraphQL/images/UI.apng",alt:"UI"}})]),t._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Install the following NuGet packages. ("),a("a",{attrs:{href:"https://github.com/EasyAbp/EasyAbpGuide/blob/master/docs/How-To.md#add-nuget-packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("see how"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("ul",[a("li",[t._v("EasyAbp.Abp.GraphQL.Application")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.GraphQL.Application.Contracts")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.GraphQL.HttpApi")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.GraphQL.HttpApi.Client")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.GraphQL.Provider.GraphQLDotnet (install to the Application layer)")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.GraphQL.Web.Altair (optional)")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.GraphQL.Web.GraphiQL (optional)")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.GraphQL.Web.Playground (optional)")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.GraphQL.Web.Voyager (optional)")])])]),t._v(" "),a("li",[a("p",[t._v("Add "),a("code",[t._v("DependsOn(typeof(Abp.GraphQLXxxModule))")]),t._v(" attribute to configure the module dependencies. ("),a("a",{attrs:{href:"https://github.com/EasyAbp/EasyAbpGuide/blob/master/docs/How-To.md#add-module-dependencies",target:"_blank",rel:"noopener noreferrer"}},[t._v("see how"),a("OutboundLink")],1),t._v(")")])])]),t._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Configure the module to auto lookup AppServices.")]),t._v(" "),a("div",{staticClass:"language-c# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Configure<AbpGraphQLOptions>(options =>\n{\n    // Find entities: Book, Author, City...\n    options.AppServiceSchemes.Configure(\n        typeof(MyProjectApplicationContractsModule).Assembly);\n\n    // Find entities: IdentityUser, IdentityRole\n    options.AppServiceSchemes.Configure(\n        typeof(AbpIdentityApplicationContractsModule).Assembly);\n});\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Configure the GraphQL UIs (if you just installed them).")]),t._v(" "),a("div",{staticClass:"language-c# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Configure<AbpAntiForgeryOptions>(options =>\n{\n    // PR need: inject the RequestVerificationToken header to UI\'s AJAX request.\n    options.AutoValidateFilter = type => type.Namespace != null &&\n        !type.Namespace.StartsWith("EasyAbp.Abp.GraphQL");\n});\n\nConfigure<AbpGraphiQLOptions>(options =>\n{\n    // options.UiBasicPath = "/myPath";\n});\n')])])])]),t._v(" "),a("li",[a("p",[t._v("Now you can query your entities with GraphQL.")]),t._v(" "),a("div",{staticClass:"language-graphql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("query")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property-query"}},[t._v("book")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CA2EBE5D-D0DC-4D63-A77A-46FF520AEC44"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token object"}},[t._v("author")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"q-a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[t._v("#")]),t._v(" Q&A")]),t._v(" "),a("p",[t._v("The following contents are for the "),a("a",{attrs:{href:"https://github.com/EasyAbp/Abp.GraphQL/tree/main/src/EasyAbp.Abp.GraphQL.Provider.GraphQLDotnet",target:"_blank",rel:"noopener noreferrer"}},[t._v("graphql-dotnet provider"),a("OutboundLink")],1),t._v(", please go to graphql-dotnet's "),a("a",{attrs:{href:"https://github.com/graphql-dotnet/graphql-dotnet",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub repo"),a("OutboundLink")],1),t._v(" or "),a("a",{attrs:{href:"https://graphql-dotnet.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docs site"),a("OutboundLink")],1),t._v(" for more information.")]),t._v(" "),a("h3",{attrs:{id:"how-to-customize-an-auto-created-appservice-scheme"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-customize-an-auto-created-appservice-scheme"}},[t._v("#")]),t._v(" How to customize an auto-created AppService scheme?")]),t._v(" "),a("p",[t._v("You can replace the AppServiceQuery class for an entity you want to customize, see "),a("a",{attrs:{href:"https://github.com/EasyAbp/Abp.GraphQL/blob/main/test/EasyAbp.Abp.GraphQL.Provider.GraphQLDotnet.Tests/AuthorAppServiceQuery.cs#L15",target:"_blank",rel:"noopener noreferrer"}},[t._v("the demo"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"how-to-create-a-schema-myself"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-create-a-schema-myself"}},[t._v("#")]),t._v(" How to create a schema myself?")]),t._v(" "),a("ol",[a("li",[t._v("Create your schema."),a("div",{staticClass:"language-c# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class MyCustomSchema : Schema, ITransientDependency\n{\n    public MySchema(IServiceProvider serviceProvider) : base(serviceProvider)\n    {\n        Query = serviceProvider.GetRequiredService<MyCustomQuery>();\n    }\n}\n")])])])]),t._v(" "),a("li",[t._v("Configure to map the "),a("code",[t._v("/MyCustom")]),t._v(" path to MyCustomSchema for UIs (if you want)."),a("div",{staticClass:"language-c# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Configure<AbpEndpointRouterOptions>(options =>\n{\n    options.EndpointConfigureActions.Add(builderContext =>\n    {\n        var uiOptions =\n            builderContext.ScopeServiceProvider.GetRequiredService<IOptions<AbpGraphiQLOptions>>().Value;\n\n         var schemaUiOption = (GraphiQLOptions)uiOptions.Clone();\n         schemaUiOption.GraphQLEndPoint = schemaUiOption.GraphQLEndPoint.Value.EnsureEndsWith(\'/\') + "MyCustom";\n         schemaUiOption.SubscriptionsEndPoint = schemaUiOption.SubscriptionsEndPoint.Value.EnsureEndsWith(\'/\') + "MyCustom";\n\n         builderContext.Endpoints.MapGraphQLGraphiQL(schemaUiOption,\n             uiOptions.UiBasicPath.RemovePreFix("/").EnsureEndsWith(\'/\') + "MyCustom");\n    });\n});\n')])])])])]),t._v(" "),a("h2",{attrs:{id:"road-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#road-map"}},[t._v("#")]),t._v(" Road map")]),t._v(" "),a("ul",[a("li",[t._v("[x] Support Query.")]),t._v(" "),a("li",[t._v("[ ] Support Mutation.")]),t._v(" "),a("li",[t._v("[ ] Support Subscription.")]),t._v(" "),a("li",[t._v("[ ] Improve UI modules.")])])])}),[],!1,null,null,null);e.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{739:function(t,a,s){"use strict";s.r(a);var e=s(103),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"abp-trees"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abp-trees"}},[t._v("#")]),t._v(" Abp.Trees")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.nuget.org/packages/EasyAbp.Abp.Trees.Domain.Shared",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/nuget/v/EasyAbp.Abp.Trees.Domain.Shared.svg?style=flat-square",alt:"NuGet"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://www.nuget.org/packages/EasyAbp.Abp.Trees.Domain.Shared",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/nuget/dt/EasyAbp.Abp.Trees.Domain.Shared.svg?style=flat-square",alt:"NuGet Download"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://www.github.com/EasyAbp/Abp.Trees",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/github/stars/EasyAbp/Abp.Trees?style=social",alt:"GitHub stars"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("An abp module that provides standard tree structure entity implement.")]),t._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Install the following NuGet packages. ("),s("a",{attrs:{href:"https://github.com/EasyAbp/EasyAbpGuide/blob/master/How-To.md#add-nuget-packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("see how"),s("OutboundLink")],1),t._v(")")]),t._v(" "),s("ul",[s("li",[t._v("EasyAbp.Abp.Trees.Domain")]),t._v(" "),s("li",[t._v("EasyAbp.Abp.Trees.Domain.Shared")]),t._v(" "),s("li",[t._v("EasyAbp.Abp.Trees.EntityFrameworkCore")])])])]),t._v(" "),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Create a entity and implement "),s("code",[t._v("ITree<TEntity>")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("Create a Repository for the entity.\n"),s("code",[t._v("EfCoreTreeRepository<TDbContext, TEntity>")]),t._v(" override some function of "),s("code",[t._v("EfCoreRepository<TDbContext, TEntity, TKey>")]),t._v(" to match tree structure:")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("InsertAsync")]),t._v(" :Auto Append node "),s("code",[t._v("Code")]),t._v(" and Calc "),s("code",[t._v("Level")]),t._v(" property when insert")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("UpdateAsync")]),t._v(" :Auto Move node when update a "),s("code",[t._v("Entity")]),t._v(" that parentId is modified")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("DeleteAsync")]),t._v(" :Also delete "),s("code",[t._v("Children")]),t._v(" nodes")])])])]),t._v(" "),s("li",[s("p",[t._v("You have two ways to use this "),s("code",[t._v("Repository")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Way 1 : Default Repository("),s("code",[t._v("ITreeRepository<>")]),t._v("),"),s("br"),t._v("\nAdd "),s("code",[t._v("context.Services.AddTreeRepository<MyProjectNameDbContext>();")]),t._v(" to ConfigureServices method in "),s("code",[t._v("MyProjectNameEntityFrameworkCoreModule.cs")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("Way 2 : Create a "),s("code",[t._v("CustomRepository")]),t._v(" that base on "),s("code",[t._v("EfCoreTreeRepository<TDbContext, TEntity>")])])]),t._v(" "),s("li",[s("p",[t._v("Example:")])])]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Services"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddAbpDbContext")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TestDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\toptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddDefaultRepositories")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token named-parameter punctuation"}},[t._v("includeAllEntities")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//add Abp's `IRepository<TEntity>`")]),t._v("\n\toptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddDefaultTreeRepositories")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//add `ITreeRepository<TEntity>` for all Entity with implement `ITree<TEntity>`")]),t._v("\n\toptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TreeEntity")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Resource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CodeLength "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//set CodeLength for each Entity(Default:5)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"sample"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sample"}},[t._v("#")]),t._v(" Sample")]),t._v(" "),s("p",[t._v("It works fine with "),s("code",[t._v("Volo.Abp.Application.Services.CrudAppService")]),t._v(".")]),t._v(" "),s("p",[t._v("After replacing "),s("code",[t._v("IRepository<>")]),t._v(" with "),s("code",[t._v("ITreeRepository<Domain.OrganizationUnit>")]),t._v(", the repository will handle the tree structure of the entity during creating, updating, and deleting.")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrganizationUnitAppService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token type-list"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Volo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Abp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Services"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CrudAppService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("\n            Domain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganizationUnit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganizationUnitDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganizationUnitDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Guid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Volo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Abp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dtos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IPagedAndSortedResultRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CreateOrganizationUnitDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Application"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UpdateOrganizationUnitDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOrganizationUnitAppService")])]),t._v("\n        \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OrganizationUnitAppService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EasyAbp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Abp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Trees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ITreeRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Domain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganizationUnit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" organizationUnitRepository\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("base")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("organizationUnitRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"roadmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#roadmap"}},[t._v("#")]),t._v(" Roadmap")]),t._v(" "),s("ul",[s("li",[t._v("[ ] Widget of tree operation for MVC UI.")]),t._v(" "),s("li",[t._v("[ ] Create a TreeManager to provides more function,example: "),s("code",[t._v("Sort")]),t._v("(reassigned code),"),s("code",[t._v("Ui Pagination")]),t._v("...")]),t._v(" "),s("li",[t._v("[ ] More Unit tests.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);
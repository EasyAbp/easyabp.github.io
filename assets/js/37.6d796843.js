(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{767:function(t,e,a){"use strict";a.r(e);var s=a(104),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"abp-trees"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abp-trees"}},[t._v("#")]),t._v(" Abp.Trees")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://abp.io",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/badge/dynamic/xml?style=flat-square&color=yellow&label=abp&query=%2F%2FProject%2FPropertyGroup%2FAbpVersion&url=https%3A%2F%2Fraw.githubusercontent.com%2FEasyAbp%2FAbp.Trees%2Fmaster%2FDirectory.Build.props",alt:"ABP version"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.nuget.org/packages/EasyAbp.Abp.Trees.Domain.Shared",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/nuget/v/EasyAbp.Abp.Trees.Domain.Shared.svg?style=flat-square",alt:"NuGet"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.nuget.org/packages/EasyAbp.Abp.Trees.Domain.Shared",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/nuget/dt/EasyAbp.Abp.Trees.Domain.Shared.svg?style=flat-square",alt:"NuGet Download"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.github.com/EasyAbp/Abp.Trees",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/github/stars/EasyAbp/Abp.Trees?style=social",alt:"GitHub stars"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("An abp module that provides standard tree structure entity implement.")]),t._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Install the following NuGet packages. ("),a("a",{attrs:{href:"https://github.com/EasyAbp/EasyAbpGuide/blob/master/Hocs/ow-To.md#add-nuget-packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("see how"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("ul",[a("li",[t._v("EasyAbp.Abp.Trees.Domain")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.Trees.Domain.Shared")]),t._v(" "),a("li",[t._v("EasyAbp.Abp.Trees.EntityFrameworkCore")])])]),t._v(" "),a("li",[a("p",[t._v("Add "),a("code",[t._v("DependsOn(typeof(AbpTreesXxxModule))")]),t._v(" attribute to configure the module dependencies. ("),a("a",{attrs:{href:"https://github.com/EasyAbp/EasyAbpGuide/blob/master/docs/How-To.md#add-module-dependencies",target:"_blank",rel:"noopener noreferrer"}},[t._v("see how"),a("OutboundLink")],1),t._v(")")])])]),t._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Create a entity and implement "),a("code",[t._v("ITree<TEntity>")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("Create a Repository for the entity.\n"),a("code",[t._v("EfCoreTreeRepository<TDbContext, TEntity>")]),t._v(" override some function of "),a("code",[t._v("EfCoreRepository<TDbContext, TEntity, TKey>")]),t._v(" to match tree structure:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("InsertAsync")]),t._v(" :Auto Append node "),a("code",[t._v("Code")]),t._v(" and Calc "),a("code",[t._v("Level")]),t._v(" property when insert")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("UpdateAsync")]),t._v(" :Auto Move node when update a "),a("code",[t._v("Entity")]),t._v(" that parentId is modified")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("DeleteAsync")]),t._v(" :Also delete "),a("code",[t._v("Children")]),t._v(" nodes")])])])]),t._v(" "),a("li",[a("p",[t._v("You have two ways to use this "),a("code",[t._v("Repository")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Way 1 : Default Repository("),a("code",[t._v("ITreeRepository<>")]),t._v("),"),a("br"),t._v("\nAdd "),a("code",[t._v("context.Services.AddTreeRepository<MyProjectNameDbContext>();")]),t._v(" to ConfigureServices method in "),a("code",[t._v("MyProjectNameEntityFrameworkCoreModule.cs")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("Way 2 : Create a "),a("code",[t._v("CustomRepository")]),t._v(" that base on "),a("code",[t._v("EfCoreTreeRepository<TDbContext, TEntity>")])])]),t._v(" "),a("li",[a("p",[t._v("Example:")])])]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Services"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddAbpDbContext")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TestDbContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\toptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddDefaultRepositories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token named-parameter punctuation"}},[t._v("includeAllEntities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//add Abp's `IRepository<TEntity>`")]),t._v("\n\toptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddDefaultTreeRepositories")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//add `ITreeRepository<TEntity>` for all Entity with implement `ITree<TEntity>`")]),t._v("\n\toptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TreeEntity")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Resource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CodeLength "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//set CodeLength for each Entity(Default:5)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"sample"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sample"}},[t._v("#")]),t._v(" Sample")]),t._v(" "),a("p",[t._v("It works fine with "),a("code",[t._v("Volo.Abp.Application.Services.CrudAppService")]),t._v(".")]),t._v(" "),a("p",[t._v("After replacing "),a("code",[t._v("IRepository<>")]),t._v(" with "),a("code",[t._v("ITreeRepository<Domain.OrganizationUnit>")]),t._v(", the repository will handle the tree structure of the entity during creating, updating, and deleting.")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrganizationUnitAppService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Volo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Abp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Services"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CrudAppService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("\n            Domain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganizationUnit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganizationUnitDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganizationUnitDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Guid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Volo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Abp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dtos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IPagedAndSortedResultRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CreateOrganizationUnitDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UpdateOrganizationUnitDto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOrganizationUnitAppService")])]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OrganizationUnitAppService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EasyAbp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Abp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Trees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ITreeRepository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Domain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrganizationUnit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" organizationUnitRepository\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("base")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("organizationUnitRepository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"roadmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roadmap"}},[t._v("#")]),t._v(" Roadmap")]),t._v(" "),a("ul",[a("li",[t._v("[ ] Widget of tree operation for MVC UI.")]),t._v(" "),a("li",[t._v("[ ] Create a TreeManager to provides more function,example: "),a("code",[t._v("Sort")]),t._v("(reassigned code),"),a("code",[t._v("Ui Pagination")]),t._v("...")]),t._v(" "),a("li",[t._v("[ ] More Unit tests.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);